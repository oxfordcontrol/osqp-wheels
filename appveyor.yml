# As config was originally based on an example by Olivier Grisel. Thanks!
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
clone_depth: 50

# No reason for us to restrict the number concurrent jobs
max_jobs: 100

environment:
  global:
      REPO_DIR: osqp-python
      PKG_NAME: osqp
      BUILD_COMMIT: v0.6.1
      NP_BUILD_DEP: "numpy==1.17.5"
      NP_TEST_DEP: "numpy==1.17.5"
      MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
      MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
      OPENBLAS_32: "https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43\
                    .ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win32.zip"
      OPENBLAS_64: "https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43\
                    .ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip"
      OPENBLAS_32_SHA256: "0a12804b08d475179a0411936f509b44d7512f0\
                           84b4a81c2fa3abe8c9ac4ee09"
      OPENBLAS_64_SHA256: "8f11d8a5a79795a3a1ccb2326c979a0ca426e62\
                           3eee93f8e35239e3c21e62cd6"
      BINTRAY_API_KEY:
              secure: ng7NUNQat2LczU5XjKKyDLITkZbZsJeAdPGDjuTdQDHDiaL03JJF6Usab+miNVsO
      WHEELHOUSE_UPLOADER_USERNAME: travis-worker
      WHEELHOUSE_UPLOADER_SECRET:
        secure:
            9s0gdDGnNnTt7hvyNpn0/ZzOMGPdwPp2SewFTfGzYk7uI+rdAN9rFq2D1gAP4NQh

  matrix:
    - PYTHON: C:\Python39
      PYTHON_VERSION: 3.9
      PYTHON_ARCH: 32
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python39-x64
      PYTHON_VERSION: 3.9
      PYTHON_ARCH: 64
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python38
      PYTHON_VERSION: 3.8
      PYTHON_ARCH: 32
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python38-x64
      PYTHON_VERSION: 3.8
      PYTHON_ARCH: 64
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python37
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 32
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python37-x64
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 64
      # NP_BUILD_DEP: "numpy==1.17.5"
      # NP_TEST_DEP: "numpy==1.17.5"

    - PYTHON: C:\Python36
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 32

    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64

    - PYTHON: C:\Python35
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 32

    - PYTHON: C:\Python35-x64
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 64

install:
  # Remove entry with sh.exe from PATH to fix error with MinGW toolchain
  # (For MinGW make to work correctly sh.exe must NOT be in your path)
  # http://stackoverflow.com/a/3870338/2288008
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python -m pip install -U pip

  # Get needed submodules
  - git submodule update --init

  # Fix MSVC builds for 64-bit Python. See:
  # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

  # Fix for 64-bit Python 2.7 builds,
  # Courtesy vs2008_express_vc_python_patch
  - call fix_appveyor_x64.bat

  # Upgrade to the latest pip and setuptools.
  - python -m pip install -U pip setuptools
  # Install the build dependencies of the project.
  - pip install %NP_BUILD_DEP% scipy future
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install wheel==0.26

  # Set MINGW PATH
  - ps: |
       $PYTHON_ARCH = $env:PYTHON_ARCH
       If ($PYTHON_ARCH -eq 32) {
           $MINGW = $env:MINGW_32
       } Else {
           $MINGW = $env:MINGW_64
       }
       $env:Path += ";$MINGW"

  # Build wheel
  - cd %REPO_DIR%
  - git checkout %BUILD_COMMIT%
  - git submodule update --init --recursive
  - python setup.py bdist_wheel
  - cd ..

build: false

test_script:
  # Install the test dependencies
  - pip install %NP_TEST_DEP% scipy future pytest
  - pip install --pre --no-index --find-links %REPO_DIR%\dist %PKG_NAME%
  - cd %REPO_DIR%
  - python -m pytest -k "not mkl_"
  - cd ..

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: $(REPO_DIR)\dist\*

on_success:
  # Upload all wheels to bintray
  - for %%f in (%REPO_DIR%\dist\*.whl) do (curl -T %%f -ubstellato:%BINTRAY_API_KEY% -H "X-Bintray-Package:osqp-wheels" -H "X-Bintray-Version:%BUILD_COMMIT%" -H "X-Bintray-Override:1" https://api.bintray.com/content/bstellato/generic/osqp-wheels/%BUILD_COMMIT%/)
  - curl -X POST -ubstellato:%BINTRAY_API_KEY% https://api.bintray.com/content/bstellato/generic/osqp-wheels/%BUILD_COMMIT%/publish
